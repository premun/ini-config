<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Config</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="R:Project_Config" /><meta name="Description" content="About This Config library was developed as student work at Charles University in Prague - Faculty of Mathematics and Physics during the course Recommended Programming Practices.SummaryVersion 1." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="unknown" /><meta name="file" content="349905f8-00b2-a7ab-c9a8-1575f0962fca" /><meta name="guid" content="349905f8-00b2-a7ab-c9a8-1575f0962fca" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Config<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="349905f8-00b2-a7ab-c9a8-1575f0962fca.htm" title="Config" tocid="roottoc">Config</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="349905f8-00b2-a7ab-c9a8-1575f0962fca.htm" title="Config" tocid="349905f8-00b2-a7ab-c9a8-1575f0962fca">Config</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="cc3d4930-8a29-4ebe-b95e-683012217500.htm" title="Config" tocid="cc3d4930-8a29-4ebe-b95e-683012217500">Config</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="1711fe5a-3905-92e4-de8e-f849e13dee12.htm" title="Config.Attribute" tocid="1711fe5a-3905-92e4-de8e-f849e13dee12">Config.Attribute</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="8a221dec-0035-05e0-32d4-09c4e964c63d.htm" title="Config.ConfigExceptions" tocid="8a221dec-0035-05e0-32d4-09c4e964c63d">Config.ConfigExceptions</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="b3a868a9-c3d1-2812-81ef-52110a3300e7.htm" title="Config.Format" tocid="b3a868a9-c3d1-2812-81ef-52110a3300e7">Config.Format</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="98a4d6cc-e303-9874-ed52-bf7173f2aba8.htm" title="Config.Format.OptionSpecifiers" tocid="98a4d6cc-e303-9874-ed52-bf7173f2aba8">Config.Format.OptionSpecifiers</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f3fe5828-8174-5348-b19c-4061892c00db.htm" title="Config.IniFiles Namespaces" tocid="f3fe5828-8174-5348-b19c-4061892c00db">Config.IniFiles Namespaces</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="c065aa74-2c0e-6515-6e43-0b709a64d4c2.htm" title="Config.Options" tocid="c065aa74-2c0e-6515-6e43-0b709a64d4c2">Config.Options</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d72c8a27-26c3-3169-c986-8d771e97bb27.htm" title="Config.Options.NumericValues" tocid="d72c8a27-26c3-3169-c986-8d771e97bb27">Config.Options.NumericValues</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Config</td></tr></table><span class="introStyle"></span><div class="summary"><h1>About</h1>
This Config library was developed as student work at <a href="http://www.mff.cuni.cz/">Charles University in Prague - Faculty of Mathematics and Physics</a> during the course <a href="http://d3s.mff.cuni.cz/teaching/programming_practices/"> Recommended Programming Practices.</a><br /><br /><h1>Summary</h1><h2>Version 1.0</h2>
Config is C# library for loading configuration files to your project. At this version <b>1.0</b> Config supports only ini files as a configuration source.
<br /><h3>Usage</h3>
Configuration file is structed to sections which contain options with values.
<br />
Option is tuple of <b>label</b> and <b>value</b>. Optionally there can be user comment introduced by semicolon. 
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EA6ABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EA6ABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EA6ABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Option <span class="highlight-number">1</span> = <span class="highlight-keyword">value</span> <span class="highlight-number">1</span> ; comment</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EA6ABA");</script>
Value of the option can be:
<ul><li>String</li><li>Integer</li><li>Float</li><li>Signed</li><li>Unsigner</li><li>String</li><li>Enum</li><li>Bool</li><li>List of types (defined above) separate by comma or colon.</li></ul>

The value can also contain a reference to other option. The format of reference is <b>${SectionName#OptionName}</b>

Example of configuration ini file:
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAZABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAZABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAZABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Sekce <span class="highlight-number">1</span>]
; komentar
Option <span class="highlight-number">1</span> = <span class="highlight-keyword">value</span> <span class="highlight-number">1</span>                     ; volba <span class="highlight-literal">'Option 1'</span> ma hodnotu <span class="highlight-literal">'value 1'</span>
oPtion <span class="highlight-number">1</span>    =  \ <span class="highlight-keyword">value</span> <span class="highlight-number">2</span>\ \ \          ; volba <span class="highlight-literal">'oPtion 1'</span> ma hodnotu <span class="highlight-literal">' value 2   '</span>, <span class="highlight-literal">'oPtion 1'</span> a <span class="highlight-literal">'Option 1'</span> jsou ruzne volby

[$Sekce::podsekce]
Option <span class="highlight-number">2</span>=<span class="highlight-keyword">value</span> <span class="highlight-number">1</span>:<span class="highlight-keyword">value</span> <span class="highlight-number">2</span>:<span class="highlight-keyword">value</span> <span class="highlight-number">3</span>       ; volba <span class="highlight-literal">'Option 2'</span> je seznam hodnot <span class="highlight-literal">'value 1'</span>, <span class="highlight-literal">'value 2'</span> a <span class="highlight-literal">'value 3'</span>
Option <span class="highlight-number">3</span> =<span class="highlight-keyword">value</span> <span class="highlight-number">1</span>, ${Sekce <span class="highlight-number">1</span><span class="highlight-preprocessor">#Option</span> <span class="highlight-number">1</span>} ; volba <span class="highlight-literal">'Option 3'</span> je seznam hodnot <span class="highlight-literal">'value 1'</span> a <span class="highlight-literal">'value 1'</span>
Option <span class="highlight-number">4</span>= v1,${$Sekce::podsekce<span class="highlight-preprocessor">#Option</span> <span class="highlight-number">3</span>},v2 ; volba <span class="highlight-literal">'Option 4'</span> je seznam hodnot <span class="highlight-literal">'v1'</span>, <span class="highlight-literal">'value 1'</span>, <span class="highlight-literal">'value 1'</span>, <span class="highlight-literal">'v2'</span>
Option <span class="highlight-number">5</span>= v1, v2:v3                    ; volba <span class="highlight-literal">'Option 5'</span> je seznam hodnot <span class="highlight-literal">'v1'</span> a <span class="highlight-literal">'v2:v3'</span>, nebo <span class="highlight-literal">'v1, v2'</span> a <span class="highlight-literal">'v3'</span> podle zvoleneho oddelovace

[Cisla]
cele = <span class="highlight-number">-1285</span>
cele_bin = <span class="highlight-number">0</span>b01101001
cele_hex = <span class="highlight-number">0x12ae</span>,<span class="highlight-number">0xAc2B</span>
cele_oct = <span class="highlight-number">01754</span>

float1 = <span class="highlight-number">-124.45667356</span>
float2 = <span class="highlight-number">+4.1234565</span>E<span class="highlight-number">+45</span>
float3 = <span class="highlight-number">412.34565</span>e45
float4 = <span class="highlight-number">-1.1245864</span>E<span class="highlight-number">-6</span>

[Other]
bool1 = <span class="highlight-number">1</span>
bool2 = <span class="highlight-keyword">on</span>
bool3=f</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAZABA");</script>

At your application, you must define configuration structure. You need to create <b>ConfigFormatSpecifier</b> which will specify all sections and its options. Format for each option specified its type.<br />

Example of format specification (fluent interface):
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EATABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EATABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EATABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">readonly</span> ConfigFormatSpecifier FormatSpecifier =
        <span class="highlight-keyword">new</span> ConfigFormatSpecifier()
            .AddSection(<span class="highlight-literal">"Server"</span>, required: <span class="highlight-keyword">true</span>)
            .AddOption(<span class="highlight-keyword">new</span> StringOptionSpecifier(<span class="highlight-literal">"hostname"</span>, <span class="highlight-keyword">true</span>))
            .AddOption(<span class="highlight-keyword">new</span> ConstraintOptionSpecifier&lt;<span class="highlight-keyword">int</span>&gt;(<span class="highlight-literal">"port"</span>,
                x =&gt; x &gt; <span class="highlight-number">0</span> &amp;&amp; x &lt; <span class="highlight-number">65536</span>, defaultValue: <span class="highlight-number">3306</span>))
            .AddOption(<span class="highlight-keyword">new</span> EnumOptionSpecifier&lt;Domains&gt;(<span class="highlight-literal">"domain"</span>,
                defaultValue: Domains.Eu))
            .AddSection(<span class="highlight-literal">"HTTP"</span>, required: <span class="highlight-keyword">true</span>)
            .AddOption(<span class="highlight-keyword">new</span> IntOptionSpecifier(<span class="highlight-literal">"timeout"</span>, defaultValue: <span class="highlight-number">5000</span>))
            .AddOption(<span class="highlight-keyword">new</span> BoolOptionSpecifier(<span class="highlight-literal">"use_https"</span>))
            .FinishDefinition();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EATABA");</script>

Now you can parse ini file. There are two option <b>BuildMode.Strict</b> and <b>BuildMode.Relaxed</b>. It can be used for validation policy.
<ul><li><b>BuildMode.Strict</b> - File can contains only specified options (must be 1:1)</li><li><b>BuildMode.Relaxed</b> - File can contains some extra options which are not specified. There options will be parsed as string options.</li></ul>
                
        
You can use simple facade IniConfig:
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EALABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EALABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EALABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Notice the IniConfig class that adds the ini file representation</span>
<span class="highlight-comment">// Representation is not bound to basic implementation, more sources can be added easily</span>
IConfig config = IniConfig.FromFile(<span class="highlight-literal">"/www/mywebsite/config.ini"</span>, FormatSpecifier, BuildMode.Strict));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EALABA");</script>

After that, you have an instance of config object which contains all loaded values. You can simply use indexer and access your configuration.
There is simple example:
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAJABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAJABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAJABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Get config values</span>
<span class="highlight-comment">// Either directly</span>
<span class="highlight-keyword">string</span> hostname = config[<span class="highlight-literal">"MySQL"</span>][<span class="highlight-literal">"hostname"</span>].String;

<span class="highlight-comment">// Or through section</span>
<span class="highlight-keyword">var</span> mysqlSection = config[<span class="highlight-literal">"MySQL"</span>];
<span class="highlight-keyword">int</span> port = mysqlSection[<span class="highlight-literal">"port"</span>].Int;

<span class="highlight-comment">// Set new values (notice method chaining)</span>
config[<span class="highlight-literal">"MySQL"</span>]
    .Set(<span class="highlight-literal">"foo"</span>, <span class="highlight-number">3.14</span>f)
    .Set(<span class="highlight-literal">"bar"</span>, <span class="highlight-number">0x45</span>);

<span class="highlight-comment">// Set new values using indexer </span>
<span class="highlight-comment">// (notice auto-boxing to BoolOption or ListOption&lt;string&gt;)</span>
config[<span class="highlight-literal">"MySQL"</span>][<span class="highlight-literal">"persistent"</span>] = <span class="highlight-keyword">true</span>;
config[<span class="highlight-literal">"MySQL"</span>][<span class="highlight-literal">"allowedIPs"</span>] = <span class="highlight-keyword">new</span>[]
{<span class="highlight-literal">"147.54.32.148"</span>, <span class="highlight-literal">"10.12.45.188"</span>};

<span class="highlight-comment">// Get specific section that was not required</span>
<span class="highlight-keyword">var</span> httpSection = config[<span class="highlight-literal">"HTTP"</span>];
<span class="highlight-keyword">if</span> (httpSection != <span class="highlight-keyword">null</span>)
{
    <span class="highlight-keyword">bool</span> secure = httpSection[<span class="highlight-literal">"use_https"</span>].Bool;
    <span class="highlight-keyword">int</span> timeout = httpSection[<span class="highlight-literal">"timeout"</span>].Int;
}

<span class="highlight-comment">// Add new section</span>
<span class="highlight-keyword">var</span> newSection = config.AddSection(<span class="highlight-literal">"New section"</span>);

<span class="highlight-comment">// Add new values</span>
newSection
    .Set(<span class="highlight-literal">"foo"</span>, <span class="highlight-number">123</span>)
    .Set(<span class="highlight-literal">"bar"</span>, <span class="highlight-keyword">false</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAJABA");</script>

Finally, you can save modified config back to file:
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAHABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">config.SaveToFile(Verbosity.Defaults &amp; Verbosity.Comments);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHABA");</script><br /><h2>Future Version 1.1</h2>
To the next version 1.1 we are going to implement a support of attributes. 
<br /><br />
Example of use: 
<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">///     Example usage of config attributes.</span>
<span class="highlight-comment">///     Class will load its values from specified config file.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
[Config(<span class="highlight-literal">"/www/mywebsite/config.ini"</span>, <span class="highlight-keyword">typeof</span> (ConfigFormatSpecifier),
    BuildMode.Strict)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MySqlConnector
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">///     First attribute parameter is section, second is option name, third says, if option is required.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    [ConfigOption(<span class="highlight-literal">"MySQL"</span>, <span class="highlight-literal">"hostname"</span>, <span class="highlight-keyword">true</span>)] <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Hostname;

    [ConfigOption(<span class="highlight-literal">"MySQL"</span>, <span class="highlight-literal">"password"</span>)] <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Password;

    [ConfigOption(<span class="highlight-literal">"MySQL"</span>, <span class="highlight-literal">"schema"</span>)] <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Schema;

    [ConfigOption(<span class="highlight-literal">"MySQL"</span>, <span class="highlight-literal">"username"</span>, <span class="highlight-keyword">true</span>)] <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Username;
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Namespaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th>Namespace</th><th>Description</th></tr><tr><td><a href="cc3d4930-8a29-4ebe-b95e-683012217500.htm">Config</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="1711fe5a-3905-92e4-de8e-f849e13dee12.htm">Config.Attribute</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="8a221dec-0035-05e0-32d4-09c4e964c63d.htm">Config.ConfigExceptions</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="b3a868a9-c3d1-2812-81ef-52110a3300e7.htm">Config.Format</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="98a4d6cc-e303-9874-ed52-bf7173f2aba8.htm">Config.Format.OptionSpecifiers</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="f3fe5828-8174-5348-b19c-4061892c00db.htm">Config.IniFiles</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="c065aa74-2c0e-6515-6e43-0b709a64d4c2.htm">Config.Options</a></td><td><div class="summary"> </div></td></tr><tr><td><a href="d72c8a27-26c3-3169-c986-8d771e97bb27.htm">Config.Options.NumericValues</a></td><td><div class="summary"> </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"> </div></body><script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>